version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - FRONTEND_URL=http://frontend:3000
    volumes:
      - ./backend/src/config:/app/src/config
      - ./backend/src/logs:/app/src/logs
      - ./backend/src/uploads:/app/src/uploads
      - systems_data:/app/systems
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - meta-sistema-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - meta-sistema-network

  # Redis para cache y sessiones
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - meta-sistema-network

  # MySQL (opcional)
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=meta_sistema_root
      - MYSQL_DATABASE=meta_sistema
      - MYSQL_USER=meta_sistema
      - MYSQL_PASSWORD=meta_sistema_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - meta-sistema-network

  # Nginx (opcional para producci√≥n)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - meta-sistema-network

  # Monitor de sistemas
  system-monitor:
    build:
      context: ./monitor
      dockerfile: Dockerfile
    environment:
      - BACKEND_URL=http://backend:5000
      - SCAN_INTERVAL=30000
    volumes:
      - systems_data:/monitor/systems
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - meta-sistema-network

volumes:
  redis_data:
  mysql_data:
  systems_data:

networks:
  meta-sistema-network:
    driver: bridge